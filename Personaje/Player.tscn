[gd_scene load_steps=114 format=3 uid="uid://ce031om8goqsi"]

[ext_resource type="PackedScene" uid="uid://dsvlswyiokh2t" path="res://Personaje/BalaArea2D.tscn" id="1_8uaeg"]
[ext_resource type="Texture2D" uid="uid://b4jti1cludsd8" path="res://Personaje/normal/Attack_1.png" id="1_e8xpl"]
[ext_resource type="Texture2D" uid="uid://tb3mi2kc8vve" path="res://Personaje/escudo/Run.png" id="2_c18lw"]
[ext_resource type="Texture2D" uid="uid://c6lu5uxtdytst" path="res://Personaje/normal/Attack_2.png" id="2_y701l"]
[ext_resource type="Texture2D" uid="uid://dv0hb6knsbeun" path="res://Personaje/escudo/Shot_1.png" id="3_i4lpm"]
[ext_resource type="Texture2D" uid="uid://owlr0tdjajd4" path="res://Personaje/escudo/Idle.png" id="3_kjt6i"]
[ext_resource type="Texture2D" uid="uid://d15pkqu4oektl" path="res://Personaje/normal/Dead.png" id="3_uv3yo"]
[ext_resource type="Texture2D" uid="uid://mu6unuo5fx7p" path="res://Personaje/normal/Hurt.png" id="4_0ax5s"]
[ext_resource type="Texture2D" uid="uid://dhtiwkg56byvp" path="res://Personaje/normal/Idle.png" id="5_c18lw"]
[ext_resource type="Texture2D" uid="uid://duynmd41cipju" path="res://Personaje/normal/Jump.png" id="6_kjt6i"]
[ext_resource type="Texture2D" uid="uid://b3yr41wx5glgc" path="res://Personaje/normal/Recharge.png" id="7_ray7a"]
[ext_resource type="Texture2D" uid="uid://bryfjuc0othdb" path="res://Personaje/normal/Run.png" id="8_0uo38"]
[ext_resource type="Texture2D" uid="uid://gqc2dvd068qw" path="res://Personaje/normal/Shot.png" id="9_60530"]
[ext_resource type="Texture2D" uid="uid://cqsrjg27smhae" path="res://Personaje/normal/Walk.png" id="10_w7cp6"]
[ext_resource type="AudioStream" uid="uid://dab0mtgglp617" path="res://efectos_sonidos/walk.mp3" id="17_db7tr"]
[ext_resource type="AudioStream" uid="uid://crysdaqu4r7gk" path="res://efectos_sonidos/jump.mp3" id="18_hr85y"]
[ext_resource type="AudioStream" uid="uid://bdov4ad8cjdwe" path="res://efectos_sonidos/dead.mp3" id="19_6xc2w"]
[ext_resource type="AudioStream" uid="uid://bdi53doxwupw4" path="res://efectos_sonidos/hurt.mp3" id="20_imvnc"]
[ext_resource type="AudioStream" uid="uid://bupl57to5nx0e" path="res://efectos_sonidos/shoot.mp3" id="21_pipto"]
[ext_resource type="AudioStream" uid="uid://2tuvu277wxni" path="res://efectos_sonidos/flor_vida.mp3" id="22_8unad"]
[ext_resource type="AudioStream" uid="uid://cqiriu827pn2l" path="res://efectos_sonidos/flor_armadura.mp3" id="23_i4lpm"]

[sub_resource type="GDScript" id="GDScript_e8xpl"]
script/source = "# Script del jugador con UI fija corregida
extends CharacterBody2D

signal player_died

const SPEED = 20.0
const JUMP_VELOCITY = -60.0
const GRAVITY = 300.0
const FALL_MULTIPLIER = 0.5
const LOW_JUMP_MULTIPLIER = 0.8
const LIMITE_CAIDA_Y = 20.0

var posicion_fija_camara := Vector2.ZERO
var tiene_armadura := false
var esta_muerto := false
var ya_inicio_muerte_caida := false

# AUDIO
@onready var sonido_pasos = get_node_or_null(\"SonidoPasos\")
@onready var sonido_salto = get_node_or_null(\"SonidoSalto\")
@onready var sonido_muerte = get_node_or_null(\"SonidoMuerte\")
@onready var sonido_daño = get_node_or_null(\"SonidoDaño\")
@onready var sonido_disparo = get_node_or_null(\"SonidoDisparo\")
@onready var sonido_curar_vida = get_node_or_null(\"SonidoCurarVida\")
@onready var sonido_armadura = get_node_or_null(\"SonidoArmadura\")

# Sistema de vida
var vida := 125
var vida_maxima := 125

# DISPARO
var puede_disparar := true
var tiempo_recarga := 0.2
var esta_disparando := false
var timer_recarga: Timer
@export var scene_bala: PackedScene

# NUEVA: Referencia a la barra de vida en el CanvasLayer
var barra_vida: TextureProgressBar = null

func _ready() -> void:
	verificar_nodos_audio()
	
	# CAMBIO: Buscar la barra de vida en el CanvasLayer del nivel
	barra_vida = get_node_or_null(\"../CanvasLayer/BarraVida\")
	if barra_vida == null:
		print(\"❌ No encontré la barra de vida en CanvasLayer\")
		# Fallback: buscar en el nivel principal
		barra_vida = get_tree().get_first_node_in_group(\"barra_vida\")
	
	if barra_vida != null:
		barra_vida.max_value = vida_maxima
		barra_vida.value = vida
		actualizar_color_barra_vida()
		print(\"✅ Barra de vida conectada correctamente\")
	else:
		print(\"⚠️ No se pudo conectar la barra de vida\")

	add_to_group(\"jugador\")
	
	# Crear timer de recarga
	timer_recarga = Timer.new()
	timer_recarga.wait_time = tiempo_recarga
	timer_recarga.one_shot = true
	timer_recarga.timeout.connect(_on_recarga_completa)
	add_child(timer_recarga)
	
	# Conectar señal de animación
	if has_node(\"AnimatedSprite2D\"):
		$AnimatedSprite2D.animation_finished.connect(_on_animation_finished)
	
	conectar_zonas_muerte()
	
	if posicion_fija_camara == Vector2.ZERO:
		posicion_fija_camara = global_position + Vector2(0, -100)

func conectar_zonas_muerte() -> void:
	var zonas_muerte = get_tree().get_nodes_in_group(\"zona_muerte\")
	for zona in zonas_muerte:
		if zona.has_signal(\"body_entered\"):
			zona.body_entered.connect(_on_zona_muerte_entered)

func _on_zona_muerte_entered(body: Node) -> void:
	if body == self and not ya_inicio_muerte_caida:
		ya_inicio_muerte_caida = true
		fijar_camara_en_posicion()
		reproducir_sonido_seguro(sonido_muerte)

func verificar_nodos_audio() -> void:
	var audios = [
		[\"SonidoPasos\", sonido_pasos],
		[\"SonidoSalto\", sonido_salto], 
		[\"SonidoMuerte\", sonido_muerte],
		[\"SonidoDaño\", sonido_daño],
		[\"SonidoDisparo\", sonido_disparo],
		[\"SonidoCurarVida\", sonido_curar_vida],
		[\"SonidoArmadura\", sonido_armadura]
	]
	
	for audio in audios:
		if audio[1] == null:
			print(\"❌ ERROR: \", audio[0], \" no encontrado\")
		else:
			print(\"✅ \", audio[0], \" encontrado\")

func _physics_process(delta: float) -> void:
	if esta_muerto:
		return
	
	verificar_caida_para_camara()
	
	if Input.is_action_just_pressed(\"disparar\"):
		if puede_disparar and not esta_disparando and is_on_floor():
			disparar()
	
	if not is_on_floor():
		if velocity.y < 0:
			velocity.y += GRAVITY * LOW_JUMP_MULTIPLIER * delta
		else:
			velocity.y += GRAVITY * FALL_MULTIPLIER * delta
			
	if Input.is_action_just_pressed(\"saltar\") and is_on_floor() and not tiene_armadura:
		velocity.y = JUMP_VELOCITY
		reproducir_sonido_seguro(sonido_salto)

	var direction := Input.get_axis(\"mover_izquierda\", \"mover_derecha\")
	if direction > 0:
		$AnimatedSprite2D.flip_h = false
	elif direction < 0:
		$AnimatedSprite2D.flip_h = true

	if direction != 0:
		velocity.x = direction * SPEED
		if is_on_floor() and not esta_sonido_reproduciendose(sonido_pasos):
			reproducir_sonido_seguro(sonido_pasos)
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		detener_sonido_seguro(sonido_pasos)

	# Animaciones
	if not is_on_floor():
		if not esta_disparando:
			$AnimatedSprite2D.play(\"jump\")
	elif esta_disparando:
		var animacion_disparo = \"armadura_atacar\" if tiene_armadura else \"shot\"
		if $AnimatedSprite2D.animation != animacion_disparo:
			$AnimatedSprite2D.play(animacion_disparo)
	elif direction != 0:
		if tiene_armadura:
			$AnimatedSprite2D.play(\"armadura_caminar\")
		else:
			$AnimatedSprite2D.play(\"run\")
	else:
		if tiene_armadura:
			$AnimatedSprite2D.play(\"armadura_idle\")
		else:
			$AnimatedSprite2D.play(\"idle\")

	move_and_slide()



func verificar_caida_para_camara() -> void:
	if global_position.y > LIMITE_CAIDA_Y:
		if not ya_inicio_muerte_caida:
			ya_inicio_muerte_caida = true
			print(\"🔥 ¡Jugador cayendo! Muerte en 2 segundos...\")
			fijar_camara_en_posicion()
			
			# DELAY de 2 segundos antes de morir
			await get_tree().create_timer(0.5).timeout
			
			# Después del delay, poner vida a 0 y morir
			bajar_vida(125)
			reproducir_sonido_seguro(sonido_muerte)
			await morir()
			

func fijar_camara_en_posicion() -> void:
	if has_node(\"Camera2D\"):
		var camara = $Camera2D
		posicion_fija_camara = camara.global_position
		camara.position_smoothing_enabled = false
		hacer_camara_independiente()
	
		
		

func hacer_camara_independiente() -> void:
	if has_node(\"Camera2D\"):
		var camara = $Camera2D
		var posicion_actual = camara.global_position
		remove_child(camara)
		get_parent().add_child(camara)
		camara.global_position = posicion_actual
		camara.position_smoothing_enabled = false

# FUNCIONES DE AUDIO SEGURO
func reproducir_sonido_seguro(nodo_audio: AudioStreamPlayer2D) -> void:
	if nodo_audio != null and nodo_audio.stream != null:
		nodo_audio.play()

func detener_sonido_seguro(nodo_audio: AudioStreamPlayer2D) -> void:
	if nodo_audio != null and esta_sonido_reproduciendose(nodo_audio):
		nodo_audio.stop()

func esta_sonido_reproduciendose(nodo_audio: AudioStreamPlayer2D) -> bool:
	if nodo_audio == null:
		return false
	return nodo_audio.playing

# DISPARO
func disparar() -> void:
	esta_disparando = true
	puede_disparar = false
	
	reproducir_sonido_seguro(sonido_disparo)
	
	var animacion_disparo = \"armadura_atacar\" if tiene_armadura else \"shot\"
	$AnimatedSprite2D.play(animacion_disparo)
	
	crear_bala()
	
	var timer_animacion = Timer.new()
	timer_animacion.wait_time = 0.8
	timer_animacion.one_shot = true
	timer_animacion.timeout.connect(_finalizar_disparo.bind(timer_animacion))
	add_child(timer_animacion)
	timer_animacion.start()

func crear_bala() -> void:
	if scene_bala != null:
		var bala = scene_bala.instantiate()
		get_parent().add_child(bala)
		bala.global_position = global_position + Vector2(0, -1.5)
		var direccion = 1 if not $AnimatedSprite2D.flip_h else -1
		if bala.has_method(\"set_direccion\"):
			bala.set_direccion(direccion)

func _finalizar_disparo(timer_animacion: Timer) -> void:
	esta_disparando = false
	if is_instance_valid(timer_animacion):
		timer_animacion.queue_free()
	if timer_recarga and not timer_recarga.is_stopped():
		timer_recarga.stop()
	timer_recarga.start()

func _on_recarga_completa() -> void:
	puede_disparar = true

func _on_animation_finished() -> void:
	var es_animacion_disparo = ($AnimatedSprite2D.animation == \"shot\" or $AnimatedSprite2D.animation == \"armadura_atacar\")
	if es_animacion_disparo and esta_disparando:
		if esta_disparando:
			esta_disparando = false

func resetear_disparo() -> void:
	esta_disparando = false
	puede_disparar = true
	if timer_recarga:
		timer_recarga.stop()

# FUNCIONES DE CONFIGURACIÓN DE CÁMARA
func configurar_posicion_fija_camara(posicion: Vector2) -> void:
	posicion_fija_camara = posicion

func marcar_posicion_actual_como_fija() -> void:
	if has_node(\"Camera2D\"):
		posicion_fija_camara = $Camera2D.global_position
	else:
		posicion_fija_camara = global_position + Vector2(0, -10)





# SISTEMA DE VIDA Y DAÑO
func bajar_vida(cantidad: int) -> void:
	if esta_muerto:
		return

	if tiene_armadura:
		tiene_armadura = false
		if not esta_sonido_reproduciendose(sonido_daño):
			reproducir_sonido_seguro(sonido_daño)
	else:
		vida -= cantidad
		if vida <= 32:
			vida = 32
			actualizar_barra_vida()
			await morir()
			return
		actualizar_barra_vida()

		if not esta_sonido_reproduciendose(sonido_daño):
			reproducir_sonido_seguro(sonido_daño)

		$AnimatedSprite2D.play(\"hurt\")
		velocity = Vector2(-50 if $AnimatedSprite2D.flip_h else 50, -10)
		await parpadeo_rojo()

func parpadeo_rojo() -> void:
	for i in 3:
		$AnimatedSprite2D.modulate = Color(1, 0.2, 0.2)
		await get_tree().create_timer(0.1).timeout
		$AnimatedSprite2D.modulate = Color(1, 1, 1)
		await get_tree().create_timer(0.1).timeout

func subir_vida(cantidad: int) -> void:
	if esta_muerto:
		return

	vida += cantidad
	if vida > vida_maxima:
		vida = vida_maxima
	
	actualizar_barra_vida()
	reproducir_sonido_seguro(sonido_curar_vida)

func activar_armadura() -> void:
	tiene_armadura = true
	reproducir_sonido_seguro(sonido_armadura)

func actualizar_barra_vida() -> void:
	if barra_vida != null:
		barra_vida.value = vida
		actualizar_color_barra_vida()

func actualizar_color_barra_vida() -> void:
	if barra_vida == null:
		return
		
	var porcentaje := float(vida) / vida_maxima

	if porcentaje <= 0.5:
		barra_vida.tint_progress = Color(1, 0, 0)  # Rojo
	elif porcentaje <= 0.64:
		barra_vida.tint_progress = Color(1, 1, 0)  # Amarillo
	else:
		barra_vida.tint_progress = Color(0, 1, 0)  # Verde

func morir() -> void:
	if esta_muerto:
		return
	esta_muerto = true
	
	# PRIMERO: Reproducir sonidos y animación
	reproducir_sonido_seguro(sonido_muerte)
	detener_sonido_seguro(sonido_pasos)
	
	velocity = Vector2.ZERO
	$AnimatedSprite2D.play(\"dead\")
	
	# ESPERAR que termine la animación ANTES de pausar
	await $AnimatedSprite2D.animation_finished
	$AnimatedSprite2D.stop()
	$AnimatedSprite2D.frame = $AnimatedSprite2D.sprite_frames.get_frame_count(\"dead\") - 1
	
	# ÚLTIMO: Emitir la señal (esto pausará el juego)
	emit_signal(\"player_died\")
"

[sub_resource type="AtlasTexture" id="AtlasTexture_y8vf7"]
atlas = ExtResource("3_i4lpm")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_t8bsi"]
atlas = ExtResource("3_i4lpm")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_n2wfr"]
atlas = ExtResource("3_i4lpm")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_5w02c"]
atlas = ExtResource("3_i4lpm")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_hwyou"]
atlas = ExtResource("2_c18lw")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_1j0s1"]
atlas = ExtResource("2_c18lw")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_l214y"]
atlas = ExtResource("2_c18lw")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_y25qa"]
atlas = ExtResource("2_c18lw")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_jtdol"]
atlas = ExtResource("2_c18lw")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_owurd"]
atlas = ExtResource("2_c18lw")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_udetl"]
atlas = ExtResource("3_kjt6i")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_bslq4"]
atlas = ExtResource("3_kjt6i")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_y70n0"]
atlas = ExtResource("3_kjt6i")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_2oygd"]
atlas = ExtResource("3_kjt6i")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_0ulgv"]
atlas = ExtResource("3_kjt6i")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_d4m2m"]
atlas = ExtResource("3_kjt6i")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_4ii17"]
atlas = ExtResource("3_kjt6i")
region = Rect2(768, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_a7sta"]
atlas = ExtResource("1_e8xpl")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_v05v2"]
atlas = ExtResource("1_e8xpl")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_v478n"]
atlas = ExtResource("1_e8xpl")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_y85rp"]
atlas = ExtResource("1_e8xpl")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_qwd1e"]
atlas = ExtResource("1_e8xpl")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_ux4gi"]
atlas = ExtResource("1_e8xpl")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_7yw6y"]
atlas = ExtResource("2_y701l")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_cjc8d"]
atlas = ExtResource("2_y701l")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_7d53q"]
atlas = ExtResource("2_y701l")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_ybmje"]
atlas = ExtResource("3_uv3yo")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_on73m"]
atlas = ExtResource("3_uv3yo")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_sewbv"]
atlas = ExtResource("3_uv3yo")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_2u16n"]
atlas = ExtResource("3_uv3yo")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_8gw5x"]
atlas = ExtResource("4_0ax5s")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_6cmny"]
atlas = ExtResource("4_0ax5s")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_ghv21"]
atlas = ExtResource("5_c18lw")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_td1mu"]
atlas = ExtResource("5_c18lw")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_s60qf"]
atlas = ExtResource("5_c18lw")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_17y36"]
atlas = ExtResource("5_c18lw")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_kbkqg"]
atlas = ExtResource("5_c18lw")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_m0hj0"]
atlas = ExtResource("5_c18lw")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_eifqm"]
atlas = ExtResource("6_kjt6i")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_1tbq1"]
atlas = ExtResource("6_kjt6i")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_y6yr3"]
atlas = ExtResource("6_kjt6i")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_kdol7"]
atlas = ExtResource("6_kjt6i")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_1tyn3"]
atlas = ExtResource("6_kjt6i")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_snky2"]
atlas = ExtResource("6_kjt6i")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_mvtq0"]
atlas = ExtResource("6_kjt6i")
region = Rect2(768, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_dgopk"]
atlas = ExtResource("6_kjt6i")
region = Rect2(896, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_shrw4"]
atlas = ExtResource("6_kjt6i")
region = Rect2(1024, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_2o3e5"]
atlas = ExtResource("6_kjt6i")
region = Rect2(1152, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_b80oy"]
atlas = ExtResource("6_kjt6i")
region = Rect2(1280, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_vp1s8"]
atlas = ExtResource("7_ray7a")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_kaabs"]
atlas = ExtResource("7_ray7a")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_40hgx"]
atlas = ExtResource("7_ray7a")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_cl47o"]
atlas = ExtResource("7_ray7a")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_7ltyi"]
atlas = ExtResource("7_ray7a")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_troe6"]
atlas = ExtResource("7_ray7a")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_ikcxv"]
atlas = ExtResource("7_ray7a")
region = Rect2(768, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_7mftp"]
atlas = ExtResource("7_ray7a")
region = Rect2(896, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_ps8w3"]
atlas = ExtResource("7_ray7a")
region = Rect2(1024, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_ai0ad"]
atlas = ExtResource("7_ray7a")
region = Rect2(1152, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_t7fmm"]
atlas = ExtResource("7_ray7a")
region = Rect2(1280, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_vbxjc"]
atlas = ExtResource("7_ray7a")
region = Rect2(1408, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_h3pk2"]
atlas = ExtResource("8_0uo38")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_xosau"]
atlas = ExtResource("8_0uo38")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_f2cii"]
atlas = ExtResource("8_0uo38")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_gtg8t"]
atlas = ExtResource("8_0uo38")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_h0opd"]
atlas = ExtResource("8_0uo38")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_32n4l"]
atlas = ExtResource("8_0uo38")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_542al"]
atlas = ExtResource("8_0uo38")
region = Rect2(768, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_nxyec"]
atlas = ExtResource("8_0uo38")
region = Rect2(896, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_tn40e"]
atlas = ExtResource("9_60530")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_ne5pm"]
atlas = ExtResource("9_60530")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_7rvnd"]
atlas = ExtResource("9_60530")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_alc20"]
atlas = ExtResource("9_60530")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_6yv6q"]
atlas = ExtResource("9_60530")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_dm7xj"]
atlas = ExtResource("9_60530")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_si0td"]
atlas = ExtResource("9_60530")
region = Rect2(768, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_wsr6m"]
atlas = ExtResource("9_60530")
region = Rect2(896, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_p6gb4"]
atlas = ExtResource("9_60530")
region = Rect2(1024, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_qib14"]
atlas = ExtResource("9_60530")
region = Rect2(1152, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_o8l3n"]
atlas = ExtResource("9_60530")
region = Rect2(1280, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_8reto"]
atlas = ExtResource("9_60530")
region = Rect2(1408, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_11a0u"]
atlas = ExtResource("10_w7cp6")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_qgwxx"]
atlas = ExtResource("10_w7cp6")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_26bvp"]
atlas = ExtResource("10_w7cp6")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_aot4x"]
atlas = ExtResource("10_w7cp6")
region = Rect2(384, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_kyhjm"]
atlas = ExtResource("10_w7cp6")
region = Rect2(512, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_o4oc1"]
atlas = ExtResource("10_w7cp6")
region = Rect2(640, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_r5n6c"]
atlas = ExtResource("10_w7cp6")
region = Rect2(768, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_qmeug"]
atlas = ExtResource("10_w7cp6")
region = Rect2(896, 0, 128, 128)

[sub_resource type="SpriteFrames" id="SpriteFrames_e8xpl"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_y8vf7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_t8bsi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_n2wfr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5w02c")
}],
"loop": true,
"name": &"armadura_atacar",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_hwyou")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1j0s1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_l214y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y25qa")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_jtdol")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_owurd")
}],
"loop": true,
"name": &"armadura_caminar",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_udetl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bslq4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y70n0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2oygd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0ulgv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_d4m2m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_4ii17")
}],
"loop": true,
"name": &"armadura_idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_a7sta")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v05v2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v478n")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y85rp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qwd1e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ux4gi")
}],
"loop": true,
"name": &"attack1",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7yw6y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cjc8d")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7d53q")
}],
"loop": true,
"name": &"attack2",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ybmje")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_on73m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sewbv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2u16n")
}],
"loop": false,
"name": &"dead",
"speed": 4.0
}, {
"frames": [],
"loop": true,
"name": &"default",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_8gw5x")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6cmny")
}],
"loop": true,
"name": &"hurt",
"speed": 1.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ghv21")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_td1mu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_s60qf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_17y36")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kbkqg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_m0hj0")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_eifqm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1tbq1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_y6yr3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kdol7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1tyn3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_snky2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_mvtq0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dgopk")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_shrw4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2o3e5")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_b80oy")
}],
"loop": true,
"name": &"jump",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_vp1s8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kaabs")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_40hgx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cl47o")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7ltyi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_troe6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ikcxv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7mftp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ps8w3")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ai0ad")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_t7fmm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_vbxjc")
}],
"loop": true,
"name": &"recharge",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_h3pk2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_xosau")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_f2cii")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gtg8t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h0opd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_32n4l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_542al")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_nxyec")
}],
"loop": true,
"name": &"run",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tn40e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ne5pm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7rvnd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_alc20")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_6yv6q")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_dm7xj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_si0td")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wsr6m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_p6gb4")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qib14")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_o8l3n")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8reto")
}],
"loop": false,
"name": &"shot",
"speed": 8.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_11a0u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qgwxx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_26bvp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_aot4x")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kyhjm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_o4oc1")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_r5n6c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qmeug")
}],
"loop": true,
"name": &"walk",
"speed": 8.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_pipto"]
radius = 1.0
height = 8.0

[node name="jugador" type="CharacterBody2D"]
script = SubResource("GDScript_e8xpl")
scene_bala = ExtResource("1_8uaeg")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
texture_filter = 1
position = Vector2(2, -4)
scale = Vector2(0.0635376, 0.101624)
sprite_frames = SubResource("SpriteFrames_e8xpl")
animation = &"dead"

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(5, -16)
offset = Vector2(10, 0)
ignore_rotation = false
zoom = Vector2(40, 20)
limit_left = -1000
position_smoothing_enabled = true
position_smoothing_speed = 8.0
drag_left_margin = 0.05
drag_right_margin = 0.05

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(2, -1)
shape = SubResource("CapsuleShape2D_pipto")
one_way_collision_margin = 0.0

[node name="SonidoPasos" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("17_db7tr")

[node name="SonidoSalto" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("18_hr85y")

[node name="SonidoMuerte" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("19_6xc2w")

[node name="SonidoDaño" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("20_imvnc")

[node name="SonidoDisparo" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("21_pipto")

[node name="SonidoCurarVida" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("22_8unad")

[node name="SonidoArmadura" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("23_i4lpm")
